a <- available.packages()
head(rownames(a), 3)
View(a)
install.packages(ggplot2)
install.packages('ggplot2')
install.packages('devtools')
installed.packages(KernSmooth)
install.packages("kernsmooth")
install.packages('KernSmooth')
library(KernSmooth)
install.packages('swirl')
mydata <- rnorm(100)
sd(mydata)
sd(x = mydata, na.rm = FALSE)
sd(na.rm = FALSE, mydata)
make.power <- function(n) {
pow <- function(x) {
x^n
}
pow
}
cube <- make.power(3)
square <- make.power(2)
cube(3)
square(3)
cube(2)
square(2)
ls(environment(cube))
get("n", environment(cube))
a <- as.Date("1969-12-31")
a
unclass(a)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
source('~/Desktop/coursera/data sets/myfirstfunction.R')
?gl
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
f <- gl(3, 10)
tapply(x, f, mean)
library(datasets)
head(airquality)
s <- split(airquality, airquality$Month)
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")], na.rm = TRUE))
library(datasets)
data(iris)
iris
?iris
lapply(iris$Sepal.Length, mean)
sapply(iris$Sepal.Length, mean)
sapply(iris[, 1],, mean)
sapply(iris[, 1], mean)
tapply(iris$Sepal.Length, mean)
tapply(iris, mean)
tapply(iris, iris$Sepal.Length, mean)
tapply(iris, species, mean)
tapply(iris, "species", mean)
head(iris)
tapply(iris, "Species", mean)
tapply(iris, Species, mean)
tapply(iris, iris$Species, mean)
?tapply
tapply(iris$Sepal.Length, iris$Species, mean)
colMeans(iris)
?apply
apply(iris, 2, mean)
apply(iris, 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
apply(mtcars, 2, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
lapply(split(mtcars$hp, mtcars$cyl), mean)
[1]
hp4 <- lapply(split(mtcars$hp, mtcars$cyl)[,1], mean)
hp4 <- lapply(split(mtcars$hp, mtcars$cyl)[,1], mean[, 1])
hp4 <- lapply(split(mtcars$hp, mtcars$cyl), mean[, 1])
hp4 <- lapply(split(mtcars$hp, mtcars$cyl), mean[1])
hp4 <- lapply(split(mtcars$hp, mtcars$cyl), mean)
hp4
hp4 <- lapply(split(mtcars$hp[1], mtcars$cyl), mean)
hp4 <- lapply(split(mtcars$hp[,1], mtcars$cyl), mean)
hp <- split(mtcars, mtcars$hp)
hp
hp4 <- lapply(hp, function(x) colMeans(x[, mtcars$cyl]))
hp4
lapply(split(mtcars$hp, mtcars$cyl), mean)
hp <- lapply(split(mtcars$hp, mtcars$cyl), mean)
hp[1]
absdiff <- (hp[3] - hp[1])
hp4 = hp[3]
hp8 = hp[1]
absdiff = hp4 - hp8
hp4
hp8
a <- hp[1]
b <- hp[3]
a - b
a-b
= a - b
hp <- lapply(split(mtcars$hp, mtcars$cyl[, "4"]), mean)
hp <- lapply(split(mtcars$hp, mtcars$cyl[, 4]), mean)
hp <- lapply(split(mtcars$hp, mtcars$cyl[1]), mean)
hp
hp <- lapply(split(mtcars$hp, mtcars$cyl[, 1]), mean)
head(mtcars)
hp <- lapply(split(mtcars$hp, mtcars$cyl[, 2]), mean)
hp <- lapply(split(mtcars$hp, mtcars$cyl[2]), mean)
hp
hp2 <- lapply(split(mtcars$hp, mtcars$cyl[2]), mean)
hp2
?lapply
hp2 <- lapply(split(mtcars$hp, mtcars$cyl), range)
hp2
hp <- lapply(split(mtcars$hp, mtcars$cyl), mean)
range(hp)
apply(mtcars, 2, mean)
split(mtcars, mtcars$cyl)
lapply(split(mtcars$hp, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
hpcyl <- sapply(split(mtcars$hp, mtcars$cyl), mean)
range(hpcyl)
a <- 4
b <- 4
a*b
a * b
hpcyl <- lapply(split(mtcars$hp, mtcars$cyl), mean)
cyl4 <- hpcyl[1]
cyl8 <- hpcyl[3]
cyl8-cyl4
as.numeric(cyl8) <- hpcyl[3]
as.numeric(cyl4) <- hpcyl[1]
as.numeric(cyl4) < - hpcyl[1]
as.numeric(cyl4) <- hpcyl[1]
mean(mtcars$cyl)
lapply(split(mtcars$hp, mtcars$cyl), mean)
a - b
debug(ls)
ls
end()
end
?debug
Q
ls
debug
setwd("~/Desktop/coursera/repos/ProgrammingAssignment2")
?solve
xmat <- matrix(rnorm(16), nrow = 4, ncol = 4)
xmat
solve(x)
solve(xmat)
source("cachemean.R")
x <- c(2, 3, 4, 6, 4, 7, 8, 9, 10)
cachemean(x)
?"vector"
cachemean.R(2, 3, 4, 5, 6)
cachemean(2, 3, 4, 5, 6)
cachemean(2)
source("cachemeanex.R")
cachemeanex(x)
makeVector(x)
cachemean(x)
